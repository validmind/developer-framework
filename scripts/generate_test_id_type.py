from pathlib import Path

tests = ""

base_path = Path(__file__).parent.parent / "validmind" / "tests"

for d in [p for p in base_path.iterdir() if p.is_dir()]:

    for path in d.rglob("*.py"):

        if path.name.startswith("__") or not path.name[0].isupper():
            continue  # skip __init__.py and other special files as well as non Test files

        parent_stem = path.parent.stem
        grandparent_stem = path.parent.parent.stem

        test_id = (
            f"validmind.{d.name}.{parent_stem}.{path.stem}"
            if grandparent_stem == d.name
            else f"validmind.{d.name}.{path.stem}"
        )
        tests += f'    "{test_id}",\n'


source = f'''# Copyright Â© 2023-2024 ValidMind Inc. All rights reserved.
# See the LICENSE file in the root of this repository for details.
# SPDX-License-Identifier: AGPL-3.0 AND ValidMind Commercial

"""Literal types for test IDs.

This module is auto-generated by running `make generate-test-id-types`.
Should not be modified manually.
"""

from typing import Literal

TestID = Literal[
{tests}]
'''

with open("validmind/tests/__types__.py", "w") as f:
    f.write(source)

print(f"Generated test ID literals and saved in validmind/tests/__types__.py")

name: Create Prod Release

permissions:
  contents: write
  pull-requests: write

on:
  workflow_dispatch:
    inputs:
      custom_branch_name:
        description: "Custom Branch Name (optional)"
        required: false
        default: ""

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Main Branch
        uses: actions/checkout@v4
        with:
          ref: "main"

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "poetry"

      - name: Get Application Version
        id: get_version
        run: |
          echo "APP_VERSION=$(poetry version -s)" >> $GITHUB_ENV

      - name: Determine Branch Name
        id: set_branch_name
        run: |
          if [ -z "${{ github.event.inputs.custom_branch_name }}" ]; then
            echo "BRANCH_NAME=prod-${{ env.APP_VERSION }}" >> $GITHUB_ENV
          else
            echo "BRANCH_NAME=${{ github.event.inputs.custom_branch_name }}" >> $GITHUB_ENV
          fi

      - name: Checkout Prod Branch
        uses: actions/checkout@v4
        with:
          ref: "prod"
          fetch-depth: 0

      - name: Setup Git Config
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Create Prod-Update Branch
        run: |
          git checkout -b ${{ env.BRANCH_NAME }}

      - name: Merge Main into Prod-Update
        run: |
          git merge --no-ff origin/main

      - name: Push to GitHub
        run: |
          git push origin ${{ env.BRANCH_NAME }}

      - name: Create Pull Request
        run: |
          gh pr create --base prod --head ${{ env.BRANCH_NAME }} --title "Merge Main into Prod (${{env.BRANCH_NAME}})" --body "Merging changes from Main into Prod, branch ${{ env.BRANCH_NAME }}." --label "internal"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
